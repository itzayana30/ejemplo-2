#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Belleza")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCompras(Compras instance);
    partial void UpdateCompras(Compras instance);
    partial void DeleteCompras(Compras instance);
    partial void InsertFotos(Fotos instance);
    partial void UpdateFotos(Fotos instance);
    partial void DeleteFotos(Fotos instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertVideos(Videos instance);
    partial void UpdateVideos(Videos instance);
    partial void DeleteVideos(Videos instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertUsos(Usos instance);
    partial void UpdateUsos(Usos instance);
    partial void DeleteUsos(Usos instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BellezaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Compras> Compras
		{
			get
			{
				return this.GetTable<Compras>();
			}
		}
		
		public System.Data.Linq.Table<Fotos> Fotos
		{
			get
			{
				return this.GetTable<Fotos>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<Videos> Videos
		{
			get
			{
				return this.GetTable<Videos>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Usos> Usos
		{
			get
			{
				return this.GetTable<Usos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compras")]
	public partial class Compras : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDCompra;
		
		private System.Nullable<long> _IDProducto;
		
		private decimal _Precio;
		
		private System.Nullable<int> _Cantidad;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCompraChanging(long value);
    partial void OnIDCompraChanged();
    partial void OnIDProductoChanging(System.Nullable<long> value);
    partial void OnIDProductoChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnCantidadChanging(System.Nullable<int> value);
    partial void OnCantidadChanged();
    #endregion
		
		public Compras()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompra", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDCompra
		{
			get
			{
				return this._IDCompra;
			}
			set
			{
				if ((this._IDCompra != value))
				{
					this.OnIDCompraChanging(value);
					this.SendPropertyChanging();
					this._IDCompra = value;
					this.SendPropertyChanged("IDCompra");
					this.OnIDCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProducto", DbType="BigInt")]
		public System.Nullable<long> IDProducto
		{
			get
			{
				return this._IDProducto;
			}
			set
			{
				if ((this._IDProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductoChanging(value);
					this.SendPropertyChanging();
					this._IDProducto = value;
					this.SendPropertyChanged("IDProducto");
					this.OnIDProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int")]
		public System.Nullable<int> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Compras", Storage="_Producto", ThisKey="IDProducto", OtherKey="IDProd", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Compras.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Compras.Add(this);
						this._IDProducto = value.IDProd;
					}
					else
					{
						this._IDProducto = default(Nullable<long>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fotos")]
	public partial class Fotos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDFotos;
		
		private System.Nullable<long> _IDProducto;
		
		private string _Foto;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFotosChanging(long value);
    partial void OnIDFotosChanged();
    partial void OnIDProductoChanging(System.Nullable<long> value);
    partial void OnIDProductoChanged();
    partial void OnFotoChanging(string value);
    partial void OnFotoChanged();
    #endregion
		
		public Fotos()
		{
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFotos", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDFotos
		{
			get
			{
				return this._IDFotos;
			}
			set
			{
				if ((this._IDFotos != value))
				{
					this.OnIDFotosChanging(value);
					this.SendPropertyChanging();
					this._IDFotos = value;
					this.SendPropertyChanged("IDFotos");
					this.OnIDFotosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProducto", DbType="BigInt")]
		public System.Nullable<long> IDProducto
		{
			get
			{
				return this._IDProducto;
			}
			set
			{
				if ((this._IDProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductoChanging(value);
					this.SendPropertyChanging();
					this._IDProducto = value;
					this.SendPropertyChanged("IDProducto");
					this.OnIDProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Foto
		{
			get
			{
				return this._Foto;
			}
			set
			{
				if ((this._Foto != value))
				{
					this.OnFotoChanging(value);
					this.SendPropertyChanging();
					this._Foto = value;
					this.SendPropertyChanged("Foto");
					this.OnFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Fotos", Storage="_Producto", ThisKey="IDProducto", OtherKey="IDProd", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Fotos.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Fotos.Add(this);
						this._IDProducto = value.IDProd;
					}
					else
					{
						this._IDProducto = default(Nullable<long>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDProd;
		
		private string _Marca;
		
		private System.Nullable<int> _Numero;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<decimal> _Oferta;
		
		private System.Nullable<long> _IdCategoria;
		
		private EntitySet<Compras> _Compras;
		
		private EntitySet<Fotos> _Fotos;
		
		private EntitySet<Usos> _Usos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProdChanging(long value);
    partial void OnIDProdChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnNumeroChanging(System.Nullable<int> value);
    partial void OnNumeroChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    partial void OnOfertaChanging(System.Nullable<decimal> value);
    partial void OnOfertaChanged();
    partial void OnIdCategoriaChanging(System.Nullable<long> value);
    partial void OnIdCategoriaChanged();
    #endregion
		
		public Producto()
		{
			this._Compras = new EntitySet<Compras>(new Action<Compras>(this.attach_Compras), new Action<Compras>(this.detach_Compras));
			this._Fotos = new EntitySet<Fotos>(new Action<Fotos>(this.attach_Fotos), new Action<Fotos>(this.detach_Fotos));
			this._Usos = new EntitySet<Usos>(new Action<Usos>(this.attach_Usos), new Action<Usos>(this.detach_Usos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProd", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDProd
		{
			get
			{
				return this._IDProd;
			}
			set
			{
				if ((this._IDProd != value))
				{
					this.OnIDProdChanging(value);
					this.SendPropertyChanging();
					this._IDProd = value;
					this.SendPropertyChanged("IDProd");
					this.OnIDProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="NVarChar(100)")]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Int")]
		public System.Nullable<int> Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oferta", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Oferta
		{
			get
			{
				return this._Oferta;
			}
			set
			{
				if ((this._Oferta != value))
				{
					this.OnOfertaChanging(value);
					this.SendPropertyChanging();
					this._Oferta = value;
					this.SendPropertyChanged("Oferta");
					this.OnOfertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="BigInt")]
		public System.Nullable<long> IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Compras", Storage="_Compras", ThisKey="IDProd", OtherKey="IDProducto")]
		public EntitySet<Compras> Compras
		{
			get
			{
				return this._Compras;
			}
			set
			{
				this._Compras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Fotos", Storage="_Fotos", ThisKey="IDProd", OtherKey="IDProducto")]
		public EntitySet<Fotos> Fotos
		{
			get
			{
				return this._Fotos;
			}
			set
			{
				this._Fotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Usos", Storage="_Usos", ThisKey="IDProd", OtherKey="IDProducto")]
		public EntitySet<Usos> Usos
		{
			get
			{
				return this._Usos;
			}
			set
			{
				this._Usos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compras(Compras entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Compras(Compras entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Fotos(Fotos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Fotos(Fotos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_Usos(Usos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_Usos(Usos entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Videos")]
	public partial class Videos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDVideos;
		
		private System.Nullable<long> _IDUsos;
		
		private string _URL;
		
		private EntityRef<Usos> _Usos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVideosChanging(long value);
    partial void OnIDVideosChanged();
    partial void OnIDUsosChanging(System.Nullable<long> value);
    partial void OnIDUsosChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Videos()
		{
			this._Usos = default(EntityRef<Usos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVideos", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDVideos
		{
			get
			{
				return this._IDVideos;
			}
			set
			{
				if ((this._IDVideos != value))
				{
					this.OnIDVideosChanging(value);
					this.SendPropertyChanging();
					this._IDVideos = value;
					this.SendPropertyChanged("IDVideos");
					this.OnIDVideosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsos", DbType="BigInt")]
		public System.Nullable<long> IDUsos
		{
			get
			{
				return this._IDUsos;
			}
			set
			{
				if ((this._IDUsos != value))
				{
					if (this._Usos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUsosChanging(value);
					this.SendPropertyChanging();
					this._IDUsos = value;
					this.SendPropertyChanged("IDUsos");
					this.OnIDUsosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usos_Videos", Storage="_Usos", ThisKey="IDUsos", OtherKey="IDUsos", IsForeignKey=true)]
		public Usos Usos
		{
			get
			{
				return this._Usos.Entity;
			}
			set
			{
				Usos previousValue = this._Usos.Entity;
				if (((previousValue != value) 
							|| (this._Usos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usos.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Usos.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._IDUsos = value.IDUsos;
					}
					else
					{
						this._IDUsos = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDUsuario;
		
		private string _Password;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Tipo;
		
		private bool _Administrador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUsuarioChanging(string value);
    partial void OnIDUsuarioChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    #endregion
		
		public Usuarios()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usos")]
	public partial class Usos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDUsos;
		
		private System.Nullable<long> _IDProducto;
		
		private string _Descripcion;
		
		private EntitySet<Videos> _Videos;
		
		private EntityRef<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUsosChanging(long value);
    partial void OnIDUsosChanged();
    partial void OnIDProductoChanging(System.Nullable<long> value);
    partial void OnIDProductoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Usos()
		{
			this._Videos = new EntitySet<Videos>(new Action<Videos>(this.attach_Videos), new Action<Videos>(this.detach_Videos));
			this._Producto = default(EntityRef<Producto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsos", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDUsos
		{
			get
			{
				return this._IDUsos;
			}
			set
			{
				if ((this._IDUsos != value))
				{
					this.OnIDUsosChanging(value);
					this.SendPropertyChanging();
					this._IDUsos = value;
					this.SendPropertyChanged("IDUsos");
					this.OnIDUsosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProducto", DbType="BigInt")]
		public System.Nullable<long> IDProducto
		{
			get
			{
				return this._IDProducto;
			}
			set
			{
				if ((this._IDProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProductoChanging(value);
					this.SendPropertyChanging();
					this._IDProducto = value;
					this.SendPropertyChanged("IDProducto");
					this.OnIDProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usos_Videos", Storage="_Videos", ThisKey="IDUsos", OtherKey="IDUsos")]
		public EntitySet<Videos> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Usos", Storage="_Producto", ThisKey="IDProducto", OtherKey="IDProd", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.Usos.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.Usos.Add(this);
						this._IDProducto = value.IDProd;
					}
					else
					{
						this._IDProducto = default(Nullable<long>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Videos(Videos entity)
		{
			this.SendPropertyChanging();
			entity.Usos = this;
		}
		
		private void detach_Videos(Videos entity)
		{
			this.SendPropertyChanging();
			entity.Usos = null;
		}
	}
}
#pragma warning restore 1591
